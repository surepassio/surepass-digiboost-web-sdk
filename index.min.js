(() => {
	(function () {
		window.DigiboostSdk = function ({
											gateway: w,
											token: b,
											onSuccess: a,
											onFailure: o,
											selector: k,
											style: s,
											title: c = "Verify with DigiLocker"
										}) {
			let m = `https://digilocker-sdk.notbot.in/?gateway=${w}&type=digilocker&token=${b}&auth_type=web&origin=${window.location.origin}`,
				e = document.createElement("button");
			e.innerText = c;
			let h = {
				padding: "10px 20px",
				backgroundColor: "#613AF5",
				color: "white",
				border: "none",
				borderRadius: "6px",
				cursor: "pointer",
				margin: "10px 20px"
			};
			Object.assign(e.style, h), s && Object.assign(e.style, s);
			let n, i, r = !1;

			function l() {e.disabled = !1, e.innerText = c, e.style.opacity = "1", e.style.cursor = "pointer"}

			function d() {window.removeEventListener("message", p), i && clearInterval(i)}

			function p(t) {
				if(!t.origin.startsWith("https://digilocker-sdk.notbot.in")) {
					console.warn("\u26D4 Blocked message from untrusted origin:", t.origin);
					return
				}
				r = !0, clearInterval(i), l(), d(), t.data?.type === "digilocker:complete" ? typeof a == "function" && a(t.data.data) : t.data?.type === "digilocker:failed" && typeof o == "function" && o(t.data.data)
			}

			e.addEventListener("click", () => {
				if(r = !1, window.addEventListener("message", p), n = window.open(m, "_blank"), !n || n.closed) {
					console.error("\u274C Popup blocked by browser"), l(), typeof o == "function" && o("Popup blocked by browser. Please enable popups and try again.");
					return
				}
				e.disabled = !0, e.innerText = "Verifying...", e.style.opacity = "0.7", e.style.cursor = "not-allowed", i = setInterval(() => {n.closed && (clearInterval(i), setTimeout(() => {r || (console.warn("\u23F9\uFE0F Popup closed without completing flow"), l(), typeof o == "function" && o("Tab closed by user without completing verification."), d())}, 500))}, 1e3)
			});

			function v(t, f, u = 10) {
				let I = 0, g = setInterval(() => {
					let y = document.querySelector(t);
					y ? (clearInterval(g), f(y)) : ++I >= u && (clearInterval(g), console.warn(`\u274C Could not find selector ${t} after ${u} attempts`), f(null))
				}, 500)
			}

			v(k, t => {t ? t.appendChild(e) : document.body.appendChild(e)})
		}
	})();
})();
